name: Terraform Automation

on:
  pull_request:
    branches:
      - develop
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.9.1

      - name: Run Terraform
        run: |
          cd infra
          terraform init

      - name: Run Terraform apply
        run: |
          cd infra
          terraform apply -auto-approve

      - name: Check Apply Status
        id: check_apply_status
        run: echo "::set-output name=exit_code::$(terraform apply -auto-approve -input=false || echo $?)"

      - name: Terraform Destroy on Failure
        if: ${{ failure() }}
        run: terraform destroy -auto-approve

      - name: Login no Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 191384364473.dkr.ecr.us-east-1.amazonaws.com

      - name: build e push da imagem docker para o ECR
        env:
          ECR_REGISTRY: "191384364473.dkr.ecr.us-east-1.amazonaws.com"
          ECR_REPOSITORY: "application-repository"
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
